import Game.GroupTheoryGame.Group.Basic
import Game.GroupTheoryGame.Subgroup
import Game.GroupTheoryGame.Lattice
import Mathlib.GroupTheory.Subgroup.Basic

namespace GroupTheoryGame

-- We define the order of subgroups by subset inclusion

instance Subgroup_le {α} [Group α] : LE (Subgroup α) where
  le x y := x.carrier ⊆ y.carrier

instance Subgroup_lt {α} [Group α] : LT (Subgroup α) where
  lt x y := x.carrier ⊆ y.carrier ∧ x.carrier ≠ y.carrier

theorem Subgroup.le_iff {α} [Group α] (x y : Subgroup α) : x ≤ y ↔ x.carrier ⊆ y.carrier := by
  exact Iff.rfl

theorem Subgroup.lt_iff {α} [Group α] (x y : Subgroup α) : x < y ↔ x.carrier ⊆ y.carrier ∧ x.carrier ≠ y.carrier := by
  exact Iff.rfl

-- We have such a theorem : that the set of all subgroups of a group forms a lattice

-- First, we have to prove that the set of all subgroups of a group is a partially ordered set. We show that the subset relation is reflexive, transitive and antisymmetric.

theorem Subgroup.left_refl {α} [Group α] (x : Subgroup α) : x ≤ x := by
  intro a ha
  exact ha

theorem Subgroup.left_trans {α} [Group α] (x y z : Subgroup α) : x ≤ y → y ≤ z → x ≤ z := by
  intro hxy hyz a ha
  exact hyz (hxy ha)

theorem Subgroup.antisymm {α} [Group α] (x y : Subgroup α) : x ≤ y → y ≤ x → x = y := by
  intro hxy hyx
  rw [subgroup_equal_iff]
  exact Set.Subset.antisymm hxy hyx

theorem Subgroup.left_iff_le {α} [Group α] (x y : Subgroup α) : x ≤ y ↔ x < y ∨ x = y := by
  rw [subgroup_equal_iff]
  apply Iff.intro
  . intro h
    cases Classical.em (x.carrier = y.carrier) with
    | inl h' => right; assumption
    | inr h' => left; exact And.intro h h'
  . intro h
    cases h with
    | inl h => exact h.left
    | inr h => rw [le_iff, h]

-- Now we can prove that the set of all subgroups of a group is a partially ordered set.

instance Subgroup_partial_order {α} [Group α] : PartialOrder (Subgroup α) where
  left_refl := Subgroup.left_refl
  left_trans := Subgroup.left_trans
  left_iff_le := Subgroup.left_iff_le
  le_antisymm := Subgroup.antisymm

-- Now we could show that the set of all subgroups of a group is a lattice iif for any two subgroups, their intersection and their union are also subgroups. Besides, their intersection is the greatest lower bound and their union is the least upper bound.



variable {G : Type} [Group G]
variable {H K : Subgroup G}

-- We first show that the intersection of two subgroups is a subgroup.


def Subgroup.intersection (H K : Subgroup G) : Subgroup G := ⟨H.carrier ∩ K.carrier, by
  have h1 : 1 ∈ H.carrier := H.one_mem
  have h2 : 1 ∈ K.carrier := K.one_mem
  exact Set.mem_inter h1 h2,
  by
    intro a b ha hb
    have h1 : a ∈ H.carrier := ha.left
    have h2 : a ∈ K.carrier := ha.right
    have h3 : b ∈ H.carrier := hb.left
    have h4 : b ∈ K.carrier := hb.right
    have h5 : a * b ∈ H.carrier := H.mul_mem h1 h3
    have h6 : a * b ∈ K.carrier := K.mul_mem h2 h4
    exact Set.mem_inter h5 h6,
  by
    intro a ha
    have h1 : a ∈ H.carrier := ha.left
    have h2 : a ∈ K.carrier := ha.right
    have h3 : a⁻¹ ∈ H.carrier := H.inv_mem h1
    have h4 : a⁻¹ ∈ K.carrier := K.inv_mem h2
    exact Set.mem_inter h3 h4⟩

-- We now prove some useful lemmas that are helpful in proving subgroups form a Galois insertion with the coercion to set.



-- We define a subgroup generated by a subset of a group.


end GroupTheoryGame
